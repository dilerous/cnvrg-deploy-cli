clusterDomain: {{ .ClusterDomain.ClusterDomain }}
clusterInternalDomain: {{ .ClusterDomain.ClusterInternalDomain }}
spec: {{ .ClusterDomain.Spec }} 
imageHub: {{ .ClusterDomain.ImageHub }}

labels:{ {{ .Labels.Key }} {{ .Labels.Value }} }
annotations:{ {{ .Annotations.Key }} {{ .Annotations.Value }} }

{{- if eq .Gpu.NvidiaDp.Enabled false }}
gpu:
  nvidiaDp:
    enabled: {{ .Gpu.NvidiaEnable }}
{{- end  }}
{{- if eq .Gpu.HabanaDp.Enabled false }}
  habanaDp:
    enabled: {{ .Gpu.HabanaEnable }}
{{- end }}


logging:
{{- if eq .Logging.FluentbitEnable false }}
  fluentbit:
    enabled: {{ .Logging.FluentbitEnable }}
{{- end}}
{{- if eq .Logging.ElastalertEnable false }}
  elastalert:
    enabled: {{ .Logging.ElastalertEnable }}
    storageSize: {{ .Logging.ElastaStorageSize }}
    storageClass: {{ .Logging.ElastaStorageClass }}
    nodeSelector: { {{ .Logging.ElastaNodeSelector }} }
{{- end }}
{{- if eq .Logging.KibanaEnable false }}
  kibana:
    svcName: {{ .Logging.KibanaSvcName }}
    enabled: {{ .Logging.KibanaEnable }}
{{- end }}

{{- if .Network.Https.Enabled }}
networking:
  https:
    enabled: {{ .Network.Https.Enabled }}
    certSecret: {{ .Network.Https.CertSecret }}
{{- end }}

{{- if .Network.Proxy.Enabled }}
  proxy:
    enabled: {{ .Network.Proxy.Enabled }}
    httpProxy: {{ .Network.Proxy.HttpProxy }}
    httpsProxy: {{ .Network.Proxy.HttpsProxy }}
    noProxy: {{ .Network.Proxy.NoProxy }}
{{- end }}


monitoring:
{{- if eq .Monitoring.DcgmExportEnable false }}
  dcgmExporter:
    enabled: {{ .Monitoring.DcgmExportEnable }}
{{- end }}

{{- if eq .Monitoring.HabanaExportEnable false }}
  habanaExporter:
    enabled: {{ .Monitoring.HabanaExportEnable }}
{{- end }}

{{- if eq .Monitoring.NodeExportEnable false }}
  nodeExporter:
    enabled: {{ .Monitoring.NodeExportEnable }}
{{- end }}

{{- if eq .Monitoring.KubeStateMetricEnable false }}
  kubeStateMetrics:
    enabled: {{ .Monitoring.KubeStateMetricEnable }}
{{- end }}

{{- if eq .Monitoring.GrafanaEnable false }}
  grafana:
    enabled: {{ .Monitoring.GrafanaEnable }}
    svcName: {{ .Monitoring.GrafanaSvcName }}
{{- end }}

{{- if eq .Monitoring.PrometheusOperatorEnable false }}
  prometheusOperator:
    enabled: {{ .Monitoring.PrometheusOperatorEnable }}
{{- end }}


{{- if eq .Monitoring.PrometheusEnable false }}
  prometheus:
    enabled: {{ .Monitoring.PrometheusEnable }}
    storageSize: {{ .Monitoring.PrometheusStorageSize }}
    storageClass: {{ .Monitoring.PrometheusStorageClass }}
    nodeSelector: { {{ .Monitoring.PrometheusNodeSelector }} }
{{- end }}

{{- if eq .Monitoring.DefaultSvcMonitorsEnable false }}
  defaultServiceMonitors:
    enabled: {{ .Monitoring.DefaultSvcMonitorsEnable }}
  {{- end }}

{{- if eq .Monitoring.CnvrgIdleMetricsEnable false }}
  cnvrgIdleMetricsExporter:
    enabled: {{ .Monitoring.CnvrgIdleMetricsEnable }}
    labels: { {{ .Monitoring.CnvrgIdleMetricsLabels }} }
  {{- end }}



{{- if .Network.Ingress.External }}
  ingress:
    type: {{ .Network.Ingress.Type }}
    istioGwEnabled: {{ .Network.Ingress.IstioGwEnabled }}
    istioGwName: {{ .Network.Ingress.IstioGwName }}
{{- end }}

{{- if eq .Network.Istio.Enabled false }}
  istio:
    enabled: {{.Network.Istio.Enabled }}
    externalIp: {{.Network.Istio.ExternalIp }}
    ingressSvcAnnotations: {{.Network.Istio.IngressSvcAnnotations }}
    ingressSvcExtraPorts: {{.Network.Istio.IngressSvcExtraPorts }}
    lbSourceRanges: {{.Network.Istio.LbSourceRanges }}
{{- end }}

{{- if .Sso.Enabled }}
sso:
  enabled: {{ .Sso.Enabled }}
  adminUser: {{ .Sso.AdminUser }}
  provider: {{ .Sso.Provider }}
  emailDomain: {{ .Sso.EmailDomain }}
  clientId: {{ .Sso.ClientId }}
  clientSecret: {{ .Sso.ClientSecret }}
  azureTenant: {{ .Sso.AzureTenant }}
  oidcIssuerUrl: {{ .Sso.OidcIssuerUrl }}
{{- end }}

{{- if .Storage.Hostpath.Enabled }}
  hostpath:
    enabled: {{ .Storage.Hostpath.Enabled }}
    defaultSc: {{ .Storage.Hostpath.DefaultSc }}
    path: {{ .Storage.Hostpath.Path }}
    reclaimPolicy: {{ .Storage.Hostpath.ReclaimPolicy }}
    nodeSelector: {{ .Storage.Hostpath.NodeSelector }}
{{- end }}

{{- if .Storage.Nfs.Enabled }}
  nfs:
    enabled: {{ .Storage.Nfs.Enabled }}
    server: {{ .Storage.Nfs.Server }}
    path: {{ .Storage.Nfs.Path }}
    defaultSc: {{ .Storage.Nfs.DefaultSc }}
    reclaimPolicy: {{ .Storage.Nfs.ReclaimPolicy }}
{{- end }}

{{- if .Tenancy.Enabled }}
tenancy:
  enabled: {{ .Tenancy.Enabled }}
  key: {{ .Tenancy.Key }}
  value: {{ .Tenancy.Value }}
{{- end }}

{{- if .Registry.Enabled }}
registry:
  url: {{ .Registry.Url }}
  user: {{ .Registry.User }}
  password: {{ .Registry.Password }}
{{- end }}

{{- if .ConfigReloader.Enabled }}
configReloader:
  enabled: {{ .ConfigReloader.Enabled }}
{{- end }}

{{- if eq .Capsule.Enabled false }}
capsule:
  enabled: {{ .Capsule.Enabled }}
  image: {{ .Capsule.Image }}
{{- end }}

{{- if eq .Backup.Enabled false }}
backup:
  enabled: {{ .Backup.Enabled }}
  rotation: {{ .Backup.Rotation }}
  period: {{ .Backup.Period }}
{{- end }}